[
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToLocaleFacadeBridge.php",
        "description": "Bridges: Method `getLocaleCollection()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToLocaleFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getLocaleCollection()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductAlternativeFacadeBridge.php",
        "description": "Bridges: Method `findProductAbstractIdsWhichConcreteHasAlternative()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductBridge.php",
        "description": "Bridges: Method `findProductAbstractIdByConcreteId()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductBridge.php",
        "description": "Bridges: Method `findProductConcreteIdsByAbstractProductId()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Method `createLabel()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Method `updateLabel()` must have `public function update<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Method `findLabelByLabelName()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Type should be defined for param `idProductLabel` in method `Spryker\\Zed\\ProductAlternativeProductLabelConnector\\Dependency\\Facade\\ProductAlternativeProductLabelConnectorToProductLabelBridge::removeProductAbstractRelationsForLabel()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Method `removeProductAbstractRelationsForLabel()` must have `public function delete<DomainEntity>Collection(<DomainEntity>CollectionDeleteCriteriaTransfer): <DomainEntity>CollectionResponseTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Type should be defined for param `idProductLabel` in method `Spryker\\Zed\\ProductAlternativeProductLabelConnector\\Dependency\\Facade\\ProductAlternativeProductLabelConnectorToProductLabelBridge::addAbstractProductRelationsForLabel()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Method `addAbstractProductRelationsForLabel()` must have `public function create<DomainEntity>Collection(<DomainEntity>CollectionRequestTransfer): <DomainEntity>CollectionResponseTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Method `findActiveLabelIdsByIdProductAbstract()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelBridge.php",
        "description": "Bridges: Method `findProductAbstractRelationsByIdProductLabel()` must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `createLabel()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `updateLabel()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `removeProductAbstractRelationsForLabel()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `addAbstractProductRelationsForLabel()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `findActiveLabelIdsByIdProductAbstract()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductAlternativeProductLabelConnector/Dependency/Facade/ProductAlternativeProductLabelConnectorToProductLabelFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `findProductAbstractRelationsByIdProductLabel()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
